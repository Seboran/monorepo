---
import BoutonSuggestionChat from './BoutonSuggestionChat.astro'

interface Props {
  lienDernierArticle: string
}

const { lienDernierArticle } = Astro.props
---

<script>
  async function waitForDelay(delayMs: number) {
    await new Promise((resolve) => setTimeout(resolve, delayMs))
  }
  const boutonDernierArticle = document.querySelector('button.dernier-article')
  boutonDernierArticle?.addEventListener('click', async () => {
    await writeInTextArea(boutonDernierArticle)
  })
  const boutonArticles = document.querySelector('button.articles')
  boutonArticles?.addEventListener('click', async () => {
    await writeInTextArea(boutonArticles)
  })
  const boutonContact = document.querySelector('button.contact')
  boutonContact?.addEventListener('click', async () => {
    await writeInTextArea(boutonContact)
  })
  const boutonAccueil = document.querySelector('button.accueil')
  boutonAccueil?.addEventListener('click', async () => {
    await writeInTextArea(boutonAccueil)
  })
  const boutonPresentation = document.querySelector('button.presentation')
  boutonPresentation?.addEventListener('click', async () => {
    await writeInTextArea(boutonPresentation)
  })

  const pauseEntreMotsEnMs = 300
  const pauseEntreCaracteresEnMs = 20
  async function writeInTextArea(boutonDernierArticle: Element) {
    const texte = (boutonDernierArticle.textContent ?? '').trim()
    const texteareElement = document.querySelector('textarea')
    if (!texteareElement) {
      throw 'Mon site est pété'
    }
    texteareElement.value = ''
    const indexPremierePause = 11
    for (let c of texte.slice(0, indexPremierePause)) {
      texteareElement.value += c
      await waitForDelay(pauseEntreCaracteresEnMs)
    }
    await waitForDelay(pauseEntreMotsEnMs)
    const indexDeuxiemePause = 35

    for (let c of texte.slice(indexPremierePause, indexDeuxiemePause)) {
      texteareElement.value += c
      await waitForDelay(pauseEntreCaracteresEnMs)
    }

    await waitForDelay(pauseEntreMotsEnMs)

    for (let c of texte.slice(indexDeuxiemePause, texte.length)) {
      texteareElement.value += c
      await waitForDelay(pauseEntreCaracteresEnMs)
    }

    await waitForDelay(800)

    const form = document.querySelector('form')
    form?.requestSubmit()
  }

  document.querySelector('textarea')!.addEventListener('keypress', (e) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault()

      document.querySelector('form')!.requestSubmit()
    }
  })

  async function processForm(e: SubmitEvent) {
    if (e.preventDefault) e.preventDefault()

    const texteRentre = document.querySelector('textarea')!
    const lienDernierArticle = document
      .querySelector('.lien-dernier-article')
      ?.attributes.getNamedItem('data-url')?.textContent!

    if (texteRentre.value.length === 0) {
      document.location.href = lienDernierArticle
      return false
    }

    const lowerCaseInput = texteRentre.value.toLowerCase()
    // Derniers articles
    if (lowerCaseInput.includes('dernier')) {
      document.location.href = lienDernierArticle
      return false
    }

    if (
      lowerCaseInput.includes('articles') ||
      lowerCaseInput.includes('blog') ||
      lowerCaseInput.includes('post')
    ) {
      document.location.href = '/blog'
      return false
    }

    if (
      lowerCaseInput.includes('contact') ||
      lowerCaseInput.includes('email') ||
      lowerCaseInput.includes('appel')
    ) {
      document.location.href = '/contact'
      return false
    }

    if (lowerCaseInput.includes('balade')) {
      document.location.href = '/presentations'
      return false
    }

    if (
      lowerCaseInput.includes('parler de toi') ||
      lowerCaseInput.includes('presentation') ||
      lowerCaseInput.includes('présentation') ||
      lowerCaseInput.includes('présenter') ||
      lowerCaseInput.includes('CV')
    ) {
      document.location.href = '/a-propos'
      return false
    }

    document.location.href = '/blog'

    // You must return false to prevent the default form behavior
    return false
  }

  var form = document.querySelector('form')
  if (form?.attachEvent) {
    form.attachEvent('submit', processForm)
  } else {
    form?.addEventListener('submit', processForm)
  }
</script>
<div>
  <div class="funny-background absolute max-w-lg w-full h-24"></div>

  <form
    class="big-perspective-on-hover relative top-0 chat-container bg-slate-100 dark:bg-slate-700 text-black dark:text-white max-w-lg m-auto p-4 flex flex-row gap-3"
  >
    <textarea
      class="h-16 w-full bg-transparent resize-none border-none outline-none placeholder:text-slate-400/75 dark:placeholder:text-slate-100/75"
      placeholder="Par exemple : Je voudrais lire le dernier article de blog."
      autofocus></textarea>
    <div class="flex flex-col">
      <button
        class="bg-blue-500 hover:bg-blue-400 h-8 w-8 p-2 rounded-sm"
        name="Envoyer message"
        aria-label="Envoyer message"
        type="submit"
      >
        <svg
          viewBox="0 0 24 24"
          class="text-white"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M12.2929 4.29289C12.6834 3.90237 13.3166 3.90237 13.7071 4.29289L20.7071 11.2929C21.0976 11.6834 21.0976 12.3166 20.7071 12.7071L13.7071 19.7071C13.3166 20.0976 12.6834 20.0976 12.2929 19.7071C11.9024 19.3166 11.9024 18.6834 12.2929 18.2929L17.5858 13H4C3.44772 13 3 12.5523 3 12C3 11.4477 3.44772 11 4 11H17.5858L12.2929 5.70711C11.9024 5.31658 11.9024 4.68342 12.2929 4.29289Z"
            fill="#FFFFFF"></path>
        </svg>
      </button>
    </div>
  </form>

  <div class="flex flex-row flex-wrap pt-5 gap-2 justify-center">
    <BoutonSuggestionChat selector="dernier-article">
      Je voudrais lire le dernier article de blog
    </BoutonSuggestionChat>
    <BoutonSuggestionChat selector="articles">
      Peux-tu montrer tous tes articles ?
    </BoutonSuggestionChat>
    <BoutonSuggestionChat selector="contact"
      >Je voudrais prendre contact</BoutonSuggestionChat
    >
    <BoutonSuggestionChat selector="accueil"
      >Je me balade juste</BoutonSuggestionChat
    >
    <BoutonSuggestionChat selector="presentation"
      >Peux-tu te présenter ?</BoutonSuggestionChat
    >
  </div>

  <div class="hidden lien-dernier-article" data-url={lienDernierArticle}></div>
</div>

<style scoped>
  @keyframes fade-in {
    0% {
      opacity: 0;
    }
    50% {
      opacity: 0.3;
    }
    100% {
      opacity: 0.8;
    }
  }
  .chat-container {
    /* animation: fade-in 0.8s ease-out forwards; */
    /* opacity: 0; */
    border: 1px solid transparent;
    border-image: linear-gradient(
      to bottom right,
      #b827fc 0%,
      #2c90fc 25%,
      #888888 50%,
      #888888 75%,
      #888888 100%
    );
    border-image-slice: 1;
  }

  .chat-container:after {
    filter: blur(25px);
    transform: translate3d(0, 0, 0);
  }

  @media (prefers-color-scheme: dark) {
    .chat-container {
      /* animation: fade-in 0.8s ease-out forwards; */
      /* opacity: 0; */
      border: 1px solid transparent;
      border-image: linear-gradient(
        to bottom right,
        #b827fc 0%,
        #2c90fc 25%,
        rgb(15, 23, 42) 50%,
        rgb(15, 23, 42) 75%,
        rgb(15, 23, 42) 100%
      );
      border-image-slice: 1;
    }
  }

  form {
    opacity: 0.8;
  }
  form:hover {
    opacity: 1;
  }

  /* .funny-background {
    filter: blur(50px);
    opacity: 0.2;
    background: linear-gradient(
      90deg,
      rgba(255, 0, 0, 1) 0%,
      rgba(255, 154, 0, 1) 10%,
      rgba(208, 222, 33, 1) 20%,
      rgba(79, 220, 74, 1) 30%,
      rgba(63, 218, 216, 1) 40%,
      rgba(47, 201, 226, 1) 50%,
      rgba(28, 127, 238, 1) 60%,
      rgba(95, 21, 242, 1) 70%,
      rgba(186, 12, 248, 1) 80%,
      rgba(251, 7, 217, 1) 90%,
      rgba(255, 0, 0, 1) 100%
    );
  } */
</style>
