---
import NavigationHeader from './header/NavigationHeader.astro'

Astro.response.headers.set('Cache-Control', 'public, s-maxage=86400')

interface Props {
  title: string
  showNirinaRabesonInNavBar?: boolean
}

const { title, showNirinaRabesonInNavBar } = Astro.props
---

<!doctype html>
<meta charset="utf-8" />
<head>
  <meta name="fediverse:creator" content="@nirina@nirinarabeson.fr" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta lang="fr-FR" />
  <title>{title}</title>
  <meta
    property="og:image:secure_url"
    content="https://www.nirinarabeson.fr/card.png"
  />
  <meta property="og:image" content="https://www.nirinarabeson.fr/card.png" />
  <meta
    property="og:image:url"
    content="https://www.nirinarabeson.fr/card.png"
  />
  <meta name="twitter:site" content="@nirinarabeson.fr" />
  <meta name="twitter:title" content="Blog de Nirina Rabeson" />
  <meta property="og:title" content="Blog de Nirina Rabeson" />
  <meta name="twitter:image" content="https://www.nirinarabeson.fr/card.png" />
  <meta property="og:type" content="homepage" />
  <meta
    name="twitter:description"
    content="Site de Nirina Rabeson. Je parle de Javascript, de musique, de technologie le tout avec mon humour à moi et mes propres opinions."
  />
  <meta
    property="og:description"
    content="Site de Nirina Rabeson. Je parle de Javascript, de musique, de technologie le tout avec mon humour à moi et mes propres opinions."
  />
  <meta
    name="description"
    content="Site de Nirina Rabeson. Je parle de Javascript, de musique, de technologie le tout avec mon humour à moi et mes propres opinions."
  />
  <link
    rel="icon"
    href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>✨</text></svg>"
  />
  <link
    rel="alternate"
    type="application/rss+xml"
    title="Site de Nirina Rabeson."
    href={new URL('rss.xml', Astro.site)}
  />
</head>
<body>
  <div>
    <div class="antialiased">
      <div class="max-w-3xl mx-auto px-4 sm:px-6 xl:max-w-5xl xl:px-0">
        <NavigationHeader>
          ✨
          {
            !showNirinaRabesonInNavBar && (
              <span class="statement-font rainbow-animation hidden md:inline dark:text-white">
                Nirina Rabeson
              </span>
            )
          }</NavigationHeader
        >
      </div>
      <main class="max-w-3xl mx-auto px-4 sm:px-6 xl:max-w-5xl xl:px-0 mb-20">
        <slot />
      </main>
    </div>
  </div>
  <a class="hidden" rel="me" href="https://hachyderm.io/@nirina">Mastodon</a>
</body>

<style is:global>
  @import url('https://fonts.googleapis.com/css2?family=DM+Serif+Text:ital@0;1&family=Lora:ital,wght@0,400..700;1,400..700&display=swap');
  @tailwind base;
  @tailwind components;
  @tailwind utilities;

  .vp-code span {
    color: var(--shiki-dark, inherit);
  }

  :root {
    --c-brand: #4b8d97;
    --c-brand-light: #75a8b0;
  }

  @media (prefers-color-scheme: dark) {
    body {
      background-color: #0f172a;
    }
  }

  .statement-font {
    font-family: 'DM Serif Text', serif;
    font-weight: 400 !important;
    font-style: normal;
  }

  nav img {
    vertical-align: middle;
  }

  p img {
    margin: 0px auto;
  }

  .prose hr {
    border-top: 1px solid #e5e7eb;
  }

  .link {
    color: var(--c-brand);
  }

  .link:hover {
    color: var(--c-brand-light);
  }

  .header-anchor {
    display: none;
  }

  h3 .header-anchor {
    display: inline-block;
    position: absolute;
    left: -1em;
    text-decoration: none;
    color: var(--c-brand);
  }

  h3 .header-anchor:before {
    content: '#';
  }

  /**
* prism.js tomorrow night eighties for JavaScript, CoffeeScript, CSS and HTML.
* Based on https://github.com/chriskempson/tomorrow-theme
*
* @author Rose Pritchard
*/
  .token.comment,
  .token.block-comment,
  .token.prolog,
  .token.doctype,
  .token.cdata {
    color: #999;
  }

  .token.punctuation {
    color: #ccc;
  }

  .token.tag,
  .token.attr-name,
  .token.namespace,
  .token.deleted {
    color: #e2777a;
  }

  .token.function-name {
    color: #6196cc;
  }

  .token.boolean,
  .token.number,
  .token.function {
    color: #f08d49;
  }

  .token.property,
  .token.class-name,
  .token.constant,
  .token.symbol {
    color: #f8c555;
  }

  .token.selector,
  .token.important,
  .token.atrule,
  .token.keyword,
  .token.builtin {
    color: #cc99cd;
  }

  .token.string,
  .token.char,
  .token.attr-value,
  .token.regex,
  .token.variable {
    color: #7ec699;
  }

  .token.operator,
  .token.entity,
  .token.url {
    color: #67cdcc;
  }

  .token.important,
  .token.bold {
    font-weight: bold;
  }

  .token.italic {
    font-style: italic;
  }

  .token.entity {
    cursor: help;
  }

  .token.inserted {
    color: #67cdcc;
  }

  button.copy {
    display: none;
  }

  span.lang {
    position: absolute;
    right: 0.5em;
    font-size: 0.75em;
    color: #999;
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
      'Liberation Mono', 'Courier New', monospace;
  }

  .custom-block {
    margin: 28px 0;
    padding: 0 24px 2px;
    border-radius: 8px;
    overflow-x: auto;
    position: relative;
    font-size: 14px;
    line-height: 1.3;
    font-weight: 500;
    color: #444;
    background-color: #f9f9f9;
  }
  .custom-block .custom-block-title {
    margin-bottom: 8px;
    font-size: 15px;
    font-weight: bold;
  }

  .custom-block.tip {
    border: 1px solid #42b883;
  }
  .custom-block.tip:before {
    color: #42b883;
  }

  .prose
    :where(:not(pre) > code):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    color: #0a3760;
    padding: 0.25em 0.4em;
    border-radius: 4px;
    background-color: #eee;
  }

  .prose
    :where(code):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    )::before {
    content: '' !important;
  }

  .prose
    :where(code):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    )::after {
    content: '' !important;
  }

  @media (prefers-color-scheme: dark) {
    .prose
      :where(:not(pre) > code):not(
        :where([class~='not-prose'], [class~='not-prose'] *)
      ) {
      color: #d1e9ff;
      background-color: #3c3a5b;
    }
  }

  @media (max-width: 518px) {
    .prose img {
      max-width: 100% !important;
    }
  }

  .rainbow-animation:hover {
    background: linear-gradient(
        217deg,
        rgba(255, 0, 0, 0.8),
        rgba(255, 0, 0, 0) 70.71%,
        rgba(255, 0, 0, 0.8)
      ),
      linear-gradient(
        127deg,
        rgba(0, 255, 0, 0.8),
        rgba(0, 255, 0, 0) 70.71%,
        rgba(0, 255, 0, 0.8)
      ),
      linear-gradient(
        336deg,
        rgba(0, 0, 255, 0.8),
        rgba(0, 0, 255, 0) 70.71%,
        rgba(0, 0, 255, 0.8)
      );
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    animation: rainbow_animation 6s ease-in-out infinite;
    transition: 1s all ease-in-out;
    background-size: 400% 100%;
  }

  @media screen and (prefers-reduced-motion: reduce) {
    .rainbow-animation,
    .rainbow-animation:hover {
      animation: none !important;
      transform: none !important;
    }
  }

  @keyframes rainbow_animation {
    0%,
    100% {
      background-position: 0 0;
    }

    50% {
      background-position: 100% 0;
    }
  }

  html {
    -moz-text-size-adjust: none;
    -webkit-text-size-adjust: none;
    text-size-adjust: none;
  }

  .perspective-on-hover,
  .big-perspective-on-hover {
    transform: perspective(500px) translate3d(0, 0, 0);

    transition: transform 1s;
    backface-visibility: hidden;
  }

  @media screen and (prefers-reduced-motion: reduce) {
    .perspective-on-hover,
    .big-perspective-on-hover {
      animation: none !important;
      transform: none !important;
    }
  }

  .perspective-on-hover:hover {
    transform: perspective(500px) translate3d(0, 0, 18px);
  }

  .big-perspective-on-hover:hover {
    transform: perspective(500px) translate3d(0, 0, 5px);
  }
</style>
